import {Radio} from "../../../shared/ui/forms/Radio";
import {useState} from "react";
import {Submit} from "../../../shared/ui";
import axios from "axios";
import {GRAPHQL_URL} from "../../URL";

export function Test() {
	const setUserAnswer = (i: number, newans: number) => {
		let tempRights: number[] = rightUserAns;
		tempRights[i] = -1;
		setRightUserAns(tempRights);
		let tempAnss: number[] = []
		for (let j = 0; j < userAnswers.length; j++) {
			if (j !== i) {
				tempAnss[j] = userAnswers[j];
			} else {
				tempAnss[j] = newans;
			}
		}
		setUserAnswers(tempAnss);
	}

	const handleSubmitClick = (): void => {
		console.log(userAnswers);

		const nickname = localStorage.getItem('nickname');

		const graphqlQuery = {
			"query": `mutation {checkAnswers (nickname: "${nickname}", answers: [${userAnswers}])}`
		}


		axios.post(GRAPHQL_URL, graphqlQuery).then((r) => {
			console.log(r.data.data.checkAnswers);
			setRightUserAns(r.data.data.checkAnswers);
		})

	}

	const questions = [
		'1) Что такое зерокодинг (zero coding)? ',
		'2) Какой термин означает "программирование без кода"? ',
		'3) Назовите близкородственное понятие к зерокодингу? ',
		'4) Какие факторы способствовали распространению зерокодинга в последние годы? ',
		'5) Какие виды программных продуктов можно разработать с помощью зерокодинга? ',
		'6) Каким образом чат-боты используются в бизнесе? ',
		'7) В чем заключается главное ограничение зерокодинга по сравнению с классическим программированием? ',
		'8) Почему зерокодинг не может полностью заменить традиционное программирование? ',
		'9) Какие преимущества могут быть при использовании и зерокодинга? ',
		'10) Каким образом зерокод-продукты могут быть полезны бизнесу? ',
	];

	const answers = [
		[
			'a) Создание IT-продуктов с помощью готовых шаблонов и графического интерфейса без написания кода.',
			'b) Создание IT-продуктов с использованием низкоуровневого кода.',
			'c) Создание IT-продуктов с использованием искусственного интеллекта.',
			'd) Создание IT-продуктов с помощью ручного кодирования.',
		],
		[
			'a) Ноукодинг.',
			'b) Зерокодинг.',
			'c) Лоукодинг.',
			'd) Автокодинг.',
		],
		[
			'a) Программирование на высокоуровневых языках.',
			'b) Программирование на низкоуровневых языках.',
			'c) Лоукодинг.',
			'd) Искусственный интеллект.',
		],
		[
			'a) Увеличение сложности программирования.',
			'b) Отсутствие готовых шаблонов.',
			'c) Массовое использование ПК.',
			'd) Развитие мобильных устройств и потребность в новых приложениях.',
		],
		[
			'a) Только сложные интернет-магазины.',
			'b) Только большие AAA-игры.',
			'c) Сайты, мобильные приложения, чат-боты, email-рассылки, игры и другие продукты.',
			'd) Только веб-приложения и цифровые портфолио.',
		],
		[
			'a) Для создания графических элементов интерфейса.',
			'b) Для улучшения безопасности веб-приложений.',
			'c) Для ответов на часто задаваемые вопросы, помощи с оформлением заказов и др.',
			'd) Для создания сложных алгоритмов управления.',
		],
		[
			'a) Зерокод-продукты требуют глубоких знаний программирования.',
			'b) Они зависят от платформы и могут быть менее безопасными.',
			'c) Зерокод-продукты могут быть созданы только на одной операционной системе.',
			'd) Они требуют наличия специализированных инструментов.',
		],
		[
			'a) Он не предоставляет готовых шаблонов для продуктов.',
			'b) Создание инструментов для зерокодинга требует написания кода.',
			'c) Зависимость от платформы снижает безопасность продуктов.',
			'd) Зерокодинг не позволяет создавать продукты с ограниченным набором функций.',
		],
		[
			'a) Можно создать только типовые продукты.',
			'b) Можно создать продукты без использования платформ.',
			'c) Оптимизация процесса разработки и обеспечение функциональности и эксклюзивности продукта.',
			'd) Создание продуктов с ограниченными функциями.',
		],
		[
			'a) Путем замены профессиональных программистов.',
			'b) Созданием продуктов без каких-либо ограничений.',
			'c) Сокращением стоимости разработки и обеспечением функциональности продукта.',
			'd) Применением только в больших компаниях.',
		]
	];

	const initUserAns = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
	const initRightUserAns = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];

	const [rightUserAns, setRightUserAns] = useState<number[]>(initRightUserAns);

	const [userAnswers, setUserAnswers] = useState<number[]>(initUserAns);


	return (
		<div className='flex flex-col px-[20vw] text-xl space-y-6 pb-20'>
			<div className='self-center text-5xl pt-4'>
				Тест
			</div>

			{questions.map((q, index) => (
				<div>
					<div className='text-2xl pb-3'>{q}</div>
					<div className='space-y-3'>
						{answers[index].map((a, index2) => (
							<div>
								<Radio right={rightUserAns[index]} className='pl-6' onChange={() => setUserAnswer(index, index2)} checked={userAnswers[index] === index2} name={`radio${index}`} value='123'>
									{a}
								</Radio>
							</div>
						))}
					</div>
				</div>
			))}

			<div className='my-[3vh] pt-5 flex justify-center items-center'>
				<Submit color='bg-[#842e5f]' onClick={handleSubmitClick} label='Сдать'></Submit>
			</div>

		</div>
	)
}